on:
  pull_request:
    branches:
      - master
jobs:
    ci_controller:
        runs-on: ubuntu-18.04
        env:
            RUN_CONTAINMENT_BASE: "/srv/"
            INSTANCE_NAME: "ci_runner"
            OS_AUTH_URL: https://oprod-controller1.osuosl.org:5000/v3
            OS_PROJECT_NAME: "godon"
            OS_USER_DOMAIN_NAME: "Default"
            OS_PROJECT_DOMAIN_ID: "default"
            OS_REGION_NAME: "RegionOne"
            OS_IDENTITY_API_VERSION: 3
            OS_INTERFACE: public
            OS_USERNAME: ${{ secrets.osuosl_openstack_user }}
            OS_PASSWORD: ${{ secrets.osuosl_openstack_pw }}
        steps:
            - uses: actions/checkout@v1
            - name: install
              run: >
                   sudo apt-get update;
                   sudo apt-get install
                   ansible
                   python3-openstackclient
                   jq;
            - name: Determine PR
              id: pr
              run: >
                   PR="$(echo "${GITHUB_REF}" | awk -F'/' '{ print $2_$3 }')";
                   echo "${PR}" > pr_data;
            - name: stage private access key
              run: >
                  echo "${access_key}" > ./access_key_file;
                  chmod 0600 ./access_key_file;
              env: # Set the secret as an input
                access_key: ${{ secrets.osuosl_openstack_instance_key }}
            - name: start runner
              run: >
                   openstack server start "${INSTANCE_NAME}"
            - name: improvise inventory
              # since openstack_inventory.py appears broken
              run: >
                   openstack server show -f json "${INSTANCE_NAME}" |
                   jq -r '.addresses' |
                   awk -F= '{ print $2 }' > ./instance_address
            - name: stage run
              run: >
                   ansible-playbook
                   --private-key ./access_key_file
                   --ssh-extra-args="-o StrictHostKeyChecking=no"
                   -i "$(cat ./instance_address),"
                   -u fedora
                   --become
                   -T 120
                   -e run_containment_dir="${RUN_CONTAINMENT_BASE}/$(cat ./pr_data)_${GITHUB_RUN_NUMBER}"
                   .github/automation/controller_staging.yml
            - name: perform run
              run: >
                   echo "TDB"
            - name: cleanup run 
              run: >
                   ansible-playbook
                   --private-key ./access_key_file
                   --ssh-extra-args="-o StrictHostKeyChecking=no"
                   -i "$(cat ./instance_address),"
                   -u fedora
                   --become
                   -T 120
                   -e run_containment_dir="${RUN_CONTAINMENT_BASE}/$(cat ./pr_data)_${GITHUB_RUN_NUMBER}"
                   .github/automation/controller_cleanup.yml
            - name: stop runner
              run: >
                   openstack server stop "${INSTANCE_NAME}"
